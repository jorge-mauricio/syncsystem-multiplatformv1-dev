APP_DEBUG=true

# System configuration.
# **************************************************************************************
CONFIG_SYSTEM_PORT=3000
CONFIG_SYSTEM_REACT_PORT=3001
CONFIG_SYSTEM_URL='http://localhost:3000'
CONFIG_SYSTEM_URL_SSL='http://localhost:3000'

CONFIG_API_URL='http://localhost:3000'
CONFIG_URL_FRONTEND_REACT='http://localhost:3001'
# **************************************************************************************

# DB System.
# **************************************************************************************
DB_SYSTEM_HOST='123.123.123.0'
DB_SYSTEM_PORT='3306'
DB_SYSTEM_DATABASE='dev_db_ss_multiplatformv1'
DB_SYSTEM_USER='user_dev'
DB_SYSTEM_PASSWORD='change123'

# DB especial configuration.
# ----------------------
CONFIG_SYSTEM_DB_TABLE_PREFIX='prefix_ssmv1_'
CONFIG_SYSTEM_DB_TYPE='2'
    # 2 - MySQL | 3 - SQL Server
ENABLE_SYSTEM_DB_SIZE_OTIMIZE='0'
    # TODO: Correct spelling OTIMIZE.
# ----------------------
# **************************************************************************************

# API Keys.
# **************************************************************************************
CONFIG_API_KEY_SYSTEM='createSecretPassword'

# Google Cloud Platform.
    # https://console.cloud.google.com/project/_/apiui/credential?_ga=123
    # Create or select project
    # Create Credentials
    # Restrict to HTTP referres
    # https://console.cloud.google.com/apis/dashboard
    # For Embed Google Maps: Search for Maps Embed API and enable.
CONFIG_API_GOOGLE_KEY='xyz'

CONFIG_API_AWS_S3_ID='xyz'
CONFIG_API_AWS_S3_KEY='xyz'
CONFIG_API_AWS_S3_BUCKET='bucket-name'
# **************************************************************************************

# e-mail server configuration.
# **************************************************************************************
CONFIG_EMAIL_DEFAULT_HOST='mail.myserver.com'
CONFIG_EMAIL_DEFAULT_PORT='587'
    # google: 465 or 587 (not tested) + ssl + configurações especiais | locaweb: 587 | uol: 587 | king host: 587
    # Google Additional configuration: https://stackoverflow.com/questions/21937586/phpmailer-smtp-error-password-command-failed-when-send-mail-from-my-server
        # ref: 
        # https://security.google.com/settings/security/activity?hl=en&pli=1
        # https://stackoverflow.com/questions/3949824/smtp-error-could-not-authenticate-in-phpmailer
        # https://www.google.com/settings/u/1/security/lesssecureapps
        # https://accounts.google.com/b/0/DisplayUnlockCaptcha
        # https://security.google.com/settings/security/activity?hl=en&pli=1

CONFIG_EMAIL_DEFAULT_USERNAME='account@myserver.com'
CONFIG_EMAIL_DEFAULT_PASSWORD='change123'
# **************************************************************************************

# Notes - Deploy:
# **************************************************************************************
# Platform type.
# ----------------------
CONFIG_DEVOPS_PLATFORM='aws'
  # aws | heroku | netlify | vercel | google cloud | azure | gitlab | github | bitbucket | jenkins | travis | circleci | codefresh | drone | buddy | semaphore | teamcity | bamboo | gitlabci | githubactions | bitbucketpipelines | azurepipelines | cloudbees | codefresh | buddy | semaphore | teamcity | bamboo | gitlabci | githubactions | bitbucketpipelines | azurepipelines | cloudbees
  # Note: includences on the default user name in some services.
CONFIG_DEVOPS_EMAIL_NOTIFICATIONS='email@domain.com'

CONFIG_DEVOPS_INFRASTRUCTURE_PREFIX='syncsystem-multiplatform-v1-'
# TODO: replace CONFIG_DOCKER_IMAGE_BACKEND and CONFIG_DOCKER_IMAGE_FRONTEND.
# ----------------------

# Server settings.
# ----------------------
CONFIG_SERVER_BACKEND_IP='123.123.123.0'
CONFIG_SERVER_BACKEND_DOMAIN='backend.mydomain.com'
CONFIG_SERVER_BACKEND_USER='ubuntu'
  # AWS: ubuntu
CONFIG_SERVER_FRONTEND_IP='123.123.123.0'
CONFIG_SERVER_FRONTEND_DOMAIN='mydomain.com'
CONFIG_SERVER_FRONTEND_USER='ubuntu'
  # AWS: ubuntu
CONFIG_SERVER_PUBLIC_KEY=""
# Note: must be in double quotes. The value should look like this: "-----BEGIN RSA PRIVATE KEY-----\nxyzxyz\n-----END RSA PRIVATE KEY-----"
# Note: if doesn't work, try to put \n at the end of each line. (ref: https://stackoverflow.com/questions/55459528/using-private-key-in-a-env-file)
# ----------------------

# GitHub repository settings.
# ----------------------
# Instructions:
# 1. Create a personal access token (PAT) in GitHub (https://github.com/settings/tokens).
# 2. Save the PAT in a secure location.
# 3. Copy the PAT.
# 4. Paste the PAT in the value of the REPO_TOKEN variable.
# Note: make sure the PAT has the necessary permissions to access the repository.
    # If granular token, make sure it has contents (read* or read and write), actions, secrets, variables, webhooks, workflow, pull requests priviledges.
    # contents (read): curl download file from repo
    # If classic token, make sure it has repo, workflow priviledges.
# ref: https://docs.github.com/en/github/authenticating-to-github/keeping-your-account-and-data-secure/creating-a-personal-access-token
# Note: tested and worked.
REPO_USER='user-name'
REPO_NAME='repo-name'
REPO_TOKEN='github_pat_123'
# ----------------------

# Docker image repository settings.
# ----------------------
REPO_DOCKER_TYPE='dockerhub'
  # github | gitlab | dockerhub | AWS ECR | Azure Container Registry | Google Container Registry
  # Note: dockerhub - no costs for public repositories: https://www.docker.com/pricing/
REPO_DOCKER_USER='docker-user-name'
REPO_DOCKER_PASSWORD='123'
REPO_DOCKER_TOKEN=''
# TODO: logic to check if there's a user defined. If not, build the image in the server. 

CONFIG_DOCKER_IMAGE_BACKEND='your-project-name-node-v1'
CONFIG_DOCKER_IMAGE_FRONTEND='your-project-name-react-ssr-v1'
# Note: must match docker-compose.yml file.
# TODO: research if there's a way to override this value in the docker-compose.yml.
# TODO: maybe, replace these with a prefix environment variable.
CONFIG_DOCKER_IMAGE_WP=''
# TODO: check if these values are being used.
# ----------------------

#Heroku - special configurations.
# ----------------------
# Note: include on server variables configurations.
# Important: on Heroku, script "start" is executed by default, even withou defining in Procfile.
# NODE_MODULES_CACHE=false #deactivate cache
# NODE_ENV=development #leave devDependencies installed (necessary for react) | development | production
    #NPM_CONFIG_PRODUCTION=false #alternative - check/test
# ----------------------

# Netlifly - special configurations.
# ----------------------
# Environment variables to set npm and node versions:
# NPM_VERSION=6.9.0
# NODE_VERSION=12.4.0
# Note: may be able to set through a .nvmrc file. 
# ----------------------

#Node - Backend.
# ----------------------
#Heroku - Working Script.
#  "main": "app.js",
#  "scripts": {
#    "start": "node app"
#  },
# ----------------------

# React - Frontend.
# ----------------------
# Heroku - Working Script.
#  "main": "node -r dotenv/config build/bundle.react.js",
#  "scripts": {
#     "start": "node -r dotenv/config build/bundle.react.js",
#     "build": "webpack --config webpack.react.js --progress && webpack --config webpack.react.client.js --progress",
#     "build:start": "webpack --config webpack.react.js --progress && webpack --config webpack.react.client.js --progress && node -r dotenv/config build/bundle.js"
#  },
# file functions-syncsystem.js
#   this line must be active: //export { FunctionsSyncSystem };
# ----------------------

# Evironments.
# ----------------------
# QA environment.
# true (create QA environment) | false (not create QA environment)
# Note: if true, domains for QA environment will be prepended with "qa.".
# TODO: implement QA environment logic.
CONFIG_DEVOPS_QA=false

# Test environment.
# true (create test environment) | false (not create test environment)
# Note: if true, domains for test environment will be prepended with "test.".
# TODO: implement QA environment logic.
CONFIG_DEVOPS_TEST=false

# Staging environment.
# true (create staging environment) | false (not create staging environment)
# Note: if true, domains for staging environment will be prepended with "staging.".
# TODO: implement QA environment logic.
CONFIG_DEVOPS_STAGING=false

# Dev environment.
# true (create dev environment) | false (not create dev environment)
# Note: if true, domains for dev environment will be prepended with "dev.".
# TODO: implement QA environment logic.
CONFIG_DEVOPS_DEV=false
# ----------------------
# **************************************************************************************
