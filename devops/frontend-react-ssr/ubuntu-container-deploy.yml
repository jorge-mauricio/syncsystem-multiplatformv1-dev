version: '3'

services:
  frontend-react-ssr:
    # Build in host server approach.
    # image: syncsystem-docker-pipeline-v1-react-ssr-v1-dev
      # Validation: worked.
    image: ${REPO_DOCKER_USER}/syncsystem-docker-pipeline-v1-react-ssr-v1:${CONFIG_DOCKER_IMAGE_FRONTEND_TAG}
    # image: jorgemauriciodev/syncsystem-docker-pipeline-v1-react-ssr-v1-dev:${CONFIG_DOCKER_IMAGE_FRONTEND_TAG}
      # TODO: update everywhere with the correct image name.
      # working
      # TODO: replace docker username with secrets, assets prefix, etc.
    # container_name: syncsystem-multiplatform-frontend-react-ssr-dev
    container_name: syncsystem-multiplatform-frontend-react-ssr-${CONFIG_DOCKER_IMAGE_FRONTEND_TAG}
    ports:
      # - "3001:3001"
      - "${CONFIG_SYSTEM_REACT_PORT}:${CONFIG_SYSTEM_REACT_PORT}"

    environment:
      CONFIG_SERVER_DIRECTORY_CONTAINERS_VOLUME_STORAGE: ${CONFIG_SERVER_DIRECTORY_CONTAINERS_VOLUME_STORAGE}
      CONFIG_DOCKER_IMAGE_FRONTEND_TAG: ${CONFIG_DOCKER_IMAGE_FRONTEND_TAG}
        # fix format CONFIG_DOCKER_IMAGE_BACKEND_TAG=${CONFIG_DOCKER_IMAGE_BACKEND_TAG
      
      # Update the env variables below from the environment-variables-secrets-manage application output.
      CONFIG_SYSTEM_PORT: ${CONFIG_SYSTEM_PORT}
      CONFIG_SYSTEM_REACT_PORT: ${CONFIG_SYSTEM_REACT_PORT}
      CONFIG_SYSTEM_URL: ${CONFIG_SYSTEM_URL}
      CONFIG_API_URL: ${CONFIG_API_URL}
      CONFIG_URL_FRONTEND_REACT: ${CONFIG_URL_FRONTEND_REACT}
      DB_SYSTEM_HOST: ${DB_SYSTEM_HOST}
      DB_SYSTEM_DATABASE: ${DB_SYSTEM_DATABASE}
      DB_SYSTEM_USER: ${DB_SYSTEM_USER}
      DB_SYSTEM_PASSWORD: ${DB_SYSTEM_PASSWORD}
      CONFIG_SYSTEM_DB_TABLE_PREFIX: ${CONFIG_SYSTEM_DB_TABLE_PREFIX}
      CONFIG_SYSTEM_DB_TYPE: ${CONFIG_SYSTEM_DB_TYPE}
      ENABLE_SYSTEM_DB_SIZE_OTIMIZE: ${ENABLE_SYSTEM_DB_SIZE_OTIMIZE}
      CONFIG_API_KEY_SYSTEM: ${CONFIG_API_KEY_SYSTEM}
      CONFIG_API_GOOGLE_KEY: ${CONFIG_API_GOOGLE_KEY}
      CONFIG_API_AWS_S3_ID: ${CONFIG_API_AWS_S3_ID}
      CONFIG_API_AWS_S3_KEY: ${CONFIG_API_AWS_S3_KEY}
      CONFIG_API_AWS_S3_BUCKET: ${CONFIG_API_AWS_S3_BUCKET}
      CONFIG_EMAIL_DEFAULT_HOST: ${CONFIG_EMAIL_DEFAULT_HOST}
      CONFIG_EMAIL_DEFAULT_PORT: ${CONFIG_EMAIL_DEFAULT_PORT}
      CONFIG_EMAIL_DEFAULT_USERNAME: ${CONFIG_EMAIL_DEFAULT_USERNAME}
      CONFIG_EMAIL_DEFAULT_PASSWORD: ${CONFIG_EMAIL_DEFAULT_PASSWORD}
      CONFIG_DEVOPS_PLATFORM: ${CONFIG_DEVOPS_PLATFORM}
      CONFIG_DEVOPS_QA: ${CONFIG_DEVOPS_QA}
      CONFIG_DEVOPS_EMAIL_NOTIFICATIONS: ${CONFIG_DEVOPS_EMAIL_NOTIFICATIONS}
      CONFIG_SERVER_BACKEND_IP: ${CONFIG_SERVER_BACKEND_IP}
      CONFIG_SERVER_BACKEND_DOMAIN: ${CONFIG_SERVER_BACKEND_DOMAIN}
      CONFIG_SERVER_BACKEND_USER: ${CONFIG_SERVER_BACKEND_USER}
      CONFIG_SERVER_PUBLIC_KEY: ${CONFIG_SERVER_PUBLIC_KEY}
      REPO_USER: ${REPO_USER}
      REPO_NAME: ${REPO_NAME}
      REPO_TOKEN: ${REPO_TOKEN}
      REPO_DOCKER_TYPE: ${REPO_DOCKER_TYPE}
      REPO_DOCKER_USER: ${REPO_DOCKER_USER}
      REPO_DOCKER_PASSWORD: ${REPO_DOCKER_PASSWORD}
      CONFIG_DOCKER_IMAGE_BACKEND: ${CONFIG_DOCKER_IMAGE_BACKEND}

    volumes:
      - volume-frontend-react-app-files-public:/usr/src/frontend-react-ssr-app/build/public
      
    # networks:
    #   - syncsystem-multiplatform-network
    
    restart: unless-stopped
    
volumes:
  volume-frontend-react-app-files-public:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/ubuntu/${CONFIG_SERVER_DIRECTORY_CONTAINERS_VOLUME_STORAGE}/frontend-react-ssr-app/app_files_public
      # device: ${PWD}/ss-storage/frontend-react-ssr-app/app_files_public
        # working
      
# networks:
#   syncsystem-multiplatform-network:
#     driver: bridge

# Defined globally in the services level.
networks:
  default:
    external:
      name: syncsystem-multiplatform-network
